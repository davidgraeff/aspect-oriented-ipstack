// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2012 David GrÃ¤ff

#pragma once

#include "util/types.h"
#include "../router/Interface.h"

using namespace ipstack;

/**
 * Calculates the icmpv4 checksum. The around advice will not be executed if tx_offloading by the
 * InternetChecksum_Tx_Offloading_all aspect is active.
 */
aspect Sendbuffer_ICMPv4_Checksum  {
	advice execution("% ipstack::ICMPv4_Socket::send(...)") && args(sendbuffer, interface) :
	before(SendBuffer* sendbuffer, Interface* interface) {
		
		ICMP_Packet* icmp = (ICMP_Packet*) sendbuffer->memstart_transport;
		const UInt16 payloadsize = ((char*)sendbuffer->data - (char*)sendbuffer->memstart_transport);
		const UInt16 csum = InternetChecksum::computePayloadChecksum((UInt8*)icmp, payloadsize, interface);
		icmp->set_checksum(csum);
	}
};