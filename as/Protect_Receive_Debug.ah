// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert, 2012 David Gr√§ff

#pragma once

#include "as/AS.h"
#include "os/krn/EnterLeave.h"
#include "SystemHalt.h"
#include "stdio.h"

using namespace ipstack;

/**
  * Halt system if a reschedule is requested within the ipstack while we are in the process of receiving a packet.
  * (This should not happen actually)
  */
aspect ProtectRescheduleReceiving {
	bool receiving;
	
	advice execution( "void os::init()" ) : after() {
		receiving = false;
	}
	
	advice execution("% ipstack::Demux::demux(...)") : before() {
		receiving = true;
		printf("Reschedule protect: receiving!\n");
	}
	
	advice construction("ipstack::Demux") : after() {
		receiving = false;
		printf("Reschedule protect: on!\n");
	}

	advice execution("% AS::Schedule()") : before() {
		if (!receiving)
			return;
		printf("Fatal: A reschedule is requested while receiving!\n");
		System::haltsystem();
	}
};
