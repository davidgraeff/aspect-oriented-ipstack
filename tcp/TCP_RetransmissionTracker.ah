// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert


#ifndef __TCP_RETRANSMISSION_TRACKER_AH__
#define __TCP_RETRANSMISSION_TRACKER_AH__

#include "TCP_RetransmissionTrackerSlice.ah"
#include "tcp_history/TCP_Record.h"

using namespace ipstack;

aspect TCP_RetransmissionTracker {

  // *** Affect class: TCP_Socket
  advice "ipstack::TCP_Socket" : slice TCP_RetransmissionTracker_Slice;

  advice call("ipstack::TCP_Record* ipstack::TCP_History::get()") &&
         within("void ipstack::TCP_Socket::updateHistory(...)") &&
         that(socket) &&
         result(res) :
         after(TCP_Socket& socket, TCP_Record* res) {

    if(res == 0){
      //history is empty. retransmitting must be completed
      socket.clearRetransmitting();
    }
  }

  //this aspect must be executed before 'SlowStart'
  advice execution ("void ipstack::TCP_Socket::retransmit(ipstack::TCP_Record*, ipstack::TCP_Segment*)") : 
         order("TCP_RetransmissionTracker" , "%" && !"TCP_RetransmissionTracker");

  advice execution("void ipstack::TCP_Socket::retransmit(ipstack::TCP_Record*, ipstack::TCP_Segment*)") &&
         args(record, segment) &&
         that(socket) :
         before(TCP_Record* record, TCP_Segment* segment, TCP_Socket& socket){

    if(segment->get_seqnum() == socket.seqnum_unacked){
      //this is the first packet of this flight that got lost.
      socket.setRetransmitting(); //slow start + rtt aspects can bind to
    }
  }

};

#endif //__TCP_RETRANSMISSION_TRACKER_AH__
