// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert


#ifndef __TCP_SLOWSTART_SLICE__
#define __TCP_SLOWSTART_SLICE__

#include "util/types.h"


slice class TCP_SlowStart_Slice {
  private:
  UInt32 cwnd; //congestion window
  UInt32 sstresh; //slow start threshold
  
  UInt16 outstanding_bytes; //unacknowledged data (UInt32?)
  
  void initSlowStart(){
    cwnd = mss;
    sstresh = 0xFFFFFFFFUL;
    outstanding_bytes = 0;
  }
  
  void increment_cwnd(UInt16 bytes_acked){
    UInt32 cwnd_old = cwnd;
    if(cwnd <= sstresh){
      //slow start
      cwnd += bytes_acked; //exponential grow
    }
    else{
      //congestion avoidance
      cwnd += (bytes_acked * (UInt32)mss) / cwnd; //linear increase
      //TODO: overflow check the multiplication above?
    }
    //overflow check
    if(cwnd < cwnd_old){
      //limit cwnd
      cwnd = 0xFFFFFFFFUL;
    }
  }
  
  void drop_cwnd(){
    if(cwnd == mss){
      return; //already dropped
    }
    sstresh = cwnd/2;
    UInt32 min_sstresh = 2*mss;
    if(sstresh < min_sstresh){
      sstresh = min_sstresh;
    }
    cwnd = mss;
    outstanding_bytes = 0;
  }
  
  bool cwnd_opened(){
    return cwnd > outstanding_bytes;
  }
  
};

#endif // __TCP_SLOWSTART_SLICE__
