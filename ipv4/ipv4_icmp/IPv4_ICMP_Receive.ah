// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert


#ifndef __IPV4_ICMP_RECEIVE_AH__
#define __IPV4_ICMP_RECEIVE_AH__

#include "../IPv4.h"
#include "../../icmp/ICMP.h"
#include "../../demux/Demux.h"
#include "Demux_IPv4_ICMP_Slice.ah"
#include "../../router/Interface.h"
#include "../InternetChecksum.h"


using namespace ipstack;

aspect IPv4_ICMP_Receive {
  // *** Affect class: Demux
  advice "ipstack::Demux" : slice Demux_IPv4_ICMP_Slice;
  
  advice execution("void ipstack::Demux::ipv4_demux(ipstack::IPv4_Packet*, unsigned, ipstack::Interface*)") &&
         args(packet, len, interface) && that(demux) :
         around(IPv4_Packet* packet, unsigned len, Interface* interface, Demux& demux){

    if(packet->get_protocol() == ICMP_Packet::IPV4_TYPE_ICMP){
      //we have a icmp packet
      if(len < (IPv4_Packet::IPV4_MIN_HEADER_SIZE + ICMP_Packet::ICMP_HEADER_SIZE)){
        return; //len too small!
      }
      
      //verify icmp checksum
      if(InternetChecksum::computePayloadChecksum(packet, interface) != 0){
        //TODO: Rx Offloading
        return;
      }

      demux.icmp_demux(packet, len, interface);
      return; //icmp packet dispatched now
    }
    tjp->proceed(); //try another 'ipv4_demux'-aspect
  }
  
};

#endif //__IPV4_ICMP_RECEIVE_AH__
