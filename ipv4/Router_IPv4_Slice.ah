// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2011 Christoph Borchert


#ifndef __ROUTER_IPV4_SLICE__
#define __ROUTER_IPV4_SLICE__

#include "../router/Interface.h"
#include "util/types.h"

using namespace ipstack;


slice class Router_IPv4_Slice {
private:
	UInt32 ipv4_gateway_addr; //IP Address of default gateway

public:
	Interface* ipv4_find_route(UInt32 ipv4_dstaddr) {
		//search for local interface. check ip addr AND subnet masks
		Interface* interface = head_interface;
		while (interface != 0) {
			if (interface->isIPv4Up()) {
				if ((interface->getIPv4Addr() & interface->getIPv4Subnetmask()) == (ipv4_dstaddr & interface->getIPv4Subnetmask())) {
					if (interface->getIPv4Addr() != ipv4_dstaddr) { //addresses MUST NOT be equal
						//valid route found
						return interface;
					}
				}
			}
			interface = interface->getNext();
		}
		return 0;
	}

	UInt32 ipv4_get_gateway_addr() {
		return ipv4_gateway_addr;
	}

	void ipv4_set_gateway_addr(UInt32 ipv4_addr) {
		ipv4_gateway_addr = ipv4_addr;
	}
};

#endif /* __ROUTER_IPV4_SLICE__ */

