#ifndef __ROUTER_IPV4_SLICE__
#define __ROUTER_IPV4_SLICE__

#include "../router/Interface.h"

using namespace ipstack;


slice class Router_IPv4_Slice {
  private:
  UInt32 ipv4_gateway_addr; //IP Address of default gateway

  public:
  Interface* ipv4_find_route(UInt32 ipv4_dstaddr){
    //search for local interface. check ip addr AND subnet masks
    Interface* interface = head_interface;
    while(interface != 0){
      if(interface->isIPv4Up()){
        if( (interface->getIPv4Addr() & interface->getIPv4Subnetmask()) == (ipv4_dstaddr & interface->getIPv4Subnetmask()) ){
          if(interface->getIPv4Addr() != ipv4_dstaddr){ //addresses MUST NOT be equal
            //valid route found
            return interface;
          }
        }
      }
      interface = interface->getNext();
    }
    return 0;
  }
  
  UInt32 ipv4_get_gateway_addr(){
    return ipv4_gateway_addr;
  }
  
  void ipv4_set_gateway_addr(UInt32 ipv4_addr){
    ipv4_gateway_addr = ipv4_addr;
  }
  
};

#endif /* __ROUTER_IPV4_SLICE__ */
