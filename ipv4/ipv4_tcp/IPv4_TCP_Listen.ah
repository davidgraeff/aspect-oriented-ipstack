#ifndef __IPV4_TCP_LISTEN_AH__
#define __IPV4_TCP_LISTEN_AH__

#include "../IPv4.h"
#include "../../tcp/TCP.h"
#include "Demux_IPv4_TCP_Listen_Slice.ah"
#include "../../demux/Demux.h"
#include "../../router/Interface.h"
#include "IPv4_TCP_Socket_Listen_Slice.ah"

using namespace ipstack;

aspect IPv4_TCP_Listen {

  // *** Affect class: IPv4_TCP_Socket
  advice "ipstack::IPv4_TCP_Socket" : slice IPv4_TCP_Socket_Listen_Slice;
  
  advice execution("bool ipstack::IPv4_TCP_Socket::_listen()") &&
         that(socket) : around(IPv4_TCP_Socket& socket){
    // delegation to 'Demux'
    *tjp->result() = Demux::Inst().listen(&socket);
  }

  // *** Affect class: Demux
  advice "ipstack::Demux" : slice Demux_IPv4_TCP_Listen_Slice;
  
  //try to find fully qualified socket first. after that, search for listen sockts.
  advice execution("void ipstack::Demux::ipv4_demux(ipstack::IPv4_Packet*, unsigned, ipstack::Interface*)") :
         order("IPv4_TCP_Receive", "IPv4_TCP_Listen");
  
  advice execution("void ipstack::Demux::ipv4_demux(ipstack::IPv4_Packet*, unsigned, ipstack::Interface*)") &&
         args(packet, len, interface) && that(demux) :
         around(IPv4_Packet* packet, unsigned len, Interface* interface, Demux& demux){

    if(packet->get_protocol() == TCP_Segment::IPV4_TYPE_TCP){
      //Length and checksum is already verified by "IPv4_TCP_Receive.ah"

      TCP_Segment* tcp_segment = (TCP_Segment*) packet->get_data();
      
      //only process SYN packets:
      if(tcp_segment->has_SYN() == true){
        UInt16 tcp_segment_dport = tcp_segment->get_dport();

        IPv4_TCP_Socket* socket = demux.ipv4_tcp_head_listen_socket;

        while(socket != 0){
          if(socket->get_sport() == tcp_segment_dport){
            //dport match found
            socket->put(packet, len);
            demux.deaf(socket); //remove socket's 'listening' state
            return;
          }
          socket = socket->getNext(); //try next socket
        }
      }
    }
    tjp->proceed(); //try another 'ipv4_demux'-aspect
  }
  
};

#endif //__IPV4_TCP_LISTEN_AH__

