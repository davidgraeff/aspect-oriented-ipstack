#ifndef __IPv4_ARP_SEND_RECEIVE_AH__
#define __IPv4_ARP_SEND_RECEIVE_AH__

#include "../../demux/Demux.h"
#include "../../router/Interface.h"

#include "../ARP.h"
#include "../ARP_Cache.h"
#include "ARP_Cache_IPv4_Send_Receive_Slice.ah"
#include "../../Eth_Frame.h"

using namespace ipstack;


aspect IPv4_ARP_Send_Receive {
  // *** Affect class: ARP_Cache
  advice "ipstack::ARP_Cache" : slice ARP_Cache_IPv4_Send_Receive_Slice;

  // *** Affect class: Demux
  advice execution("void ipstack::Demux::arp_demux(ipstack::ARP_Packet*, unsigned, ipstack::Interface*)") &&
         args(packet, len, interface) && that(demux) :
         around(ARP_Packet* packet, unsigned len, Interface* interface, Demux& demux){

    if(packet->get_protocol_type() == ARP_Packet::ARP_PROTOCOL_TYPE_IPV4){
      //we have an ARP packet for IPv4
          
      //is the receiving interface running ipv4?
      if(interface->isIPv4Up() == false){
        //discard packets on down interfaces
        return;
      }
          
      //check for correct packet size
      if(len < ARP_Packet::ARP_IPV4_PACKETSIZE){
        //packet size too small!
        return;
      }

      //extract destination ipv4_addr out of this ARP packet:
      UInt8* dst_ipv4_addr_ptr = packet->get_payload() + (2*ARP_Packet::ARP_HW_ADDR_SIZE_ETH + ARP_Packet::ARP_PROTOCOL_ADDR_SIZE_IPV4);
      UInt32 dst_ipv4_addr = *((UInt32*)dst_ipv4_addr_ptr);

      if(interface->getIPv4Addr() == dst_ipv4_addr){
        //this ARP packet is for us
        
        //extract source hw- and ipv4-addresses
        UInt8* src_hw_addr = packet->get_payload();
        UInt8* src_ipv4_addr = packet->get_payload() + ARP_Packet::ARP_HW_ADDR_SIZE_ETH;
        
        if(packet->get_opcode() == ARP_Packet::ARP_REQUEST){
          //Send ARP-Reply
          ARP_Cache::Inst().ipv4_reply(src_hw_addr, (UInt32*) src_ipv4_addr, interface);
        }
        else if(packet->get_opcode() == ARP_Packet::ARP_REPLY){
          //Update ARP Cache entries
          ARP_Cache::Inst().ipv4_update((UInt32*) src_ipv4_addr, src_hw_addr);
        }
      }
    }
    else{
      tjp->proceed();
    }
  }
  
};

#endif // __IPv4_ARP_SEND_RECEIVE_AH__

