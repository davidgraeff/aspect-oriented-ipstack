// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2012 David Gr√§ff

#pragma once
/**
 * Purpose: Add a ndp cache entry pointer to each IPV6.
 * This will bypass the entire ndp cache lookup process. A ndp
 * cache pointer is automatically invalidated if the destination
 * address changes or if the ndp cache entry is removed.
 */

#include "../ndpcache/NDPCacheEntry.h"
#include "util/types.h"
using namespace ipstack;

slice class IPv6_DEST_CACHE_Slice
{
	private:
		IPV6* next;
		NDPCacheEntry* nexthop_ndpcache_entry;
	public:
		IPV6* getNext() {
			return next;
		}
		void setNext(IPV6* sock) {
			next = sock;
		}
		NDPCacheEntry* get_nexthop_ndpcache_entry() {
			return nexthop_ndpcache_entry;
		}
		void set_nexthop_ndpcache_entry(NDPCacheEntry* e) {
			nexthop_ndpcache_entry = e;
		}
};

