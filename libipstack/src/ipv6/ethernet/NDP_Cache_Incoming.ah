// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2012 David GrÃ¤ff

#pragma once

#include "router/Interface.h"
#include "ethernet/Eth_Frame.h"
#include "router/Router.h"
#include "demux/Demux.h"
#include "router/sendbuffer/SendBuffer.h"
#include "ipv6/IPv6_Packet.h"
#include "ipv6/IPv6onSockets.h"
#include "ipv6/AddressMemory.h"

using namespace ipstack;

aspect IPv6_Ethernet_NDPCache_Incoming_Aspect {
	// We try to prefetch some mac addresses in the ndp cache now.
	advice execution("void ipstack::Demux::ethernet_demux(...)") &&
	args(ethernet_frame, framelen, interface) && that(demux) :
		after(const void* ethernet_frame, unsigned framelen, Interface* interface, Demux& demux) {

		Eth_Frame* eth_frame = (Eth_Frame*) ethernet_frame;

		if (eth_frame->get_type() != IPv6_Packet::ETH_TYPE_IPV6)
			return;

		// This frame encapsulates IPv6 traffic
		if (memcmp(eth_frame->get_dst_hwaddr(), interface->getAddress(), 6) == 0) {
			// This frame is not a broadcast but directed to us
			IPv6_Packet* ipv6_packet = (IPv6_Packet*)eth_frame->get_data();
			NDPCacheEntry* entry = interface->addNDPCacheEntry(ipv6_packet->get_src_ipaddr(), eth_frame->get_src_hwaddr(), NDPCacheEntry::NDPCacheEntryState_Reachable);
			if (entry)
				interface->update_NDPCacheEntry_importance(entry, NDPCacheEntry::IMPORTANCE_good_to_know);
		}
	}
};
