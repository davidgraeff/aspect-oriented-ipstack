// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2011 Christoph Borchert, 2012 David GrÃ¤ff

#pragma once

#include "udp/UDP_Packet.h"
#include "ipv4.h"
#include "router/Interface.h"
#include "demux/Demux.h"
#include "../InternetChecksum.h"

using namespace ipstack;

aspect IPv4_UDP_Rx_Checksumming {
	advice execution("void ipstack::Demux::ipv4_demux(ipstack::IPv4_Packet*, unsigned, ipstack::Interface*)") &&
	args(packet, len, interface) && that(demux) :
		around(IPv4_Packet* packet, unsigned len, Interface* interface, Demux& demux) {

		if (packet->get_protocol() != UDP_Packet::IP_TYPE_UDP) {
			tjp->proceed();
			return;
		}

		//we have an udp packet
		if (len < (IPv4_Packet::IPV4_MIN_HEADER_SIZE + UDP_Packet::UDP_HEADER_SIZE)) {
			return; //len too small! Drop entire packet
		}
		
		len -= packet->get_ihl() * 4; // Length including UDP_HEADER_SIZE

		UDP_Packet* udp = (UDP_Packet*) packet->get_data();

		if (udp->get_checksum() != 0) {
			//this packet is protected by an internet checksum
			if (!udp->checksum_valid(InternetChecksumV4::computePseudoHeader(packet, len, UDP_Packet::IP_TYPE_UDP), len, interface)) {
				// checksum wrong: drop entire packet
				return;
			}
		}
		tjp->proceed();
	}
};
