// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert

#pragma once

using namespace ipstack;

aspect IPv4_Receive_Fragment_Reassembly {
	advice execution("bool ipstack::%::addToReceiveQueue(ipstack::ReceiveBuffer&)") &&
			args(receivebuffer) : around(ReceiveBuffer& receivebuffer){
		// if it is an IPv4 packet and IPv4_Packet::IPV4_MF_FLAG || (fragment_offset != 0)
	}
	
	
			uint16_t fragment_offset = packet->get_fragment_offset();
			if ((packet->get_flags() == IPv4_Packet::IPV4_MF_FLAG) || (fragment_offset != 0)) {
				// This is a fragmented ipv4 packet. try to reassemble. ipv4_reassemble has to call
				// ip_payload when finished.
				ipv4_reassemble(packet, fragment_offset * 8));
				return;
			}

			//no fragment or reassembled fragment

};
