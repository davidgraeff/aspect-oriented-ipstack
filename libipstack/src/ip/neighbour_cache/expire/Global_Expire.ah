// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert, 2013 David GrÃ¤ff
#pragma once
#include "util/ipstack_inttypes.h"
#include "NeighbourCacheConfig.h"
#include "NeighbourCache.h"

using namespace ipstack;

aspect Neighbour_Cache_Global_Timeout {  
  inline uint64_t getNextExpireTime(const uint64_t curr_time) {
	  return curr_time + Clock::ms_to_ticks(NEIGHBOURCACHE_GLOBAL_TIMEOUT_SEC * 1000UL);
  }
  
  advice execution("% ipstack::System::init(...)") : after() {
	  timeout_window = getNextExpireTime(Clock::now()); //in ticks
  }

  advice execution("% ipstack::System::periodic1min(...)") : after() {
	  static uint8_t timout_mins = 0;
    
    if(++timeout_window > NEIGHBOURCACHE_GLOBAL_TIMEOUT_SEC/60){
      timeout_mins = 0;
	  //invalidate all cache entries
      NeighbourCache.Inst().clear();
    }
  }
  
};
