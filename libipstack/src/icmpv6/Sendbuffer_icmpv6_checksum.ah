// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2012 David GrÃ¤ff

#pragma once

#include "util/ipstack_inttypes.h"
#include "router/Interface.h"
#include "SendBuffer.h"
#include "ipv6/IPv6.h"
#include "ipv6/InternetChecksum.h"
#include "icmpv6/ICMPv6.h"

using namespace ipstack;

/**
 * Calculates the icmpv6 checksum. The around advice will not be executed if tx_offloading by the
 * InternetChecksum_Tx_Offloading_all aspect is active.
 */
aspect Sendbuffer_ICMPv6_Checksum  {
	advice execution("% ipstack::ICMPv6_Socket::send(...)") && args(dataToSend) :
		before(SendBuffer* dataToSend) {

		IPv6_Packet* packet = (IPv6_Packet*)dataToSend->memstart_ip;
		ICMPv6_Packet* icmp = (ICMPv6_Packet*) dataToSend->memstart_transport;

		Interface* interface = dataToSend->getInterface();
		uint16_t payloadsize = ((char*)dataToSend->data - (char*)dataToSend->memstart_transport);
		icmp->set_checksum(0);
		icmp->set_checksum(icmp->calc_checksum(InternetChecksumV6::computePseudoHeader(packet, payloadsize, ICMPv6_Packet::IPV6_TYPE_ICMP), payloadsize, interface));
	}
};