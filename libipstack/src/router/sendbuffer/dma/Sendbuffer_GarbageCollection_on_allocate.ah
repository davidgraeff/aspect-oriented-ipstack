// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2013 David GrÃ¤ff

#pragma once
#include "util/ipstack_inttypes.h"
#include "router/sendbuffer/SendBuffer.h"
using namespace ipstack;

/**
  * Garbage collection on alloc
  */
aspect Sendbuffer_GarbageCollection_on_allocate {
	advice execution( "% ipstack::SendBuffer::requestRawBuffer(...)" ) : after() {
		SendBuffer* sendbuffer = SendBuffer::free_first;
		SendBuffer* sendbufferNext = 0, sendbufferLast = 0;
		while (sendbuffer) {
			Interface* i = sendbuffer->getInterface();
			sendbufferNext = sendbuffer->free_next;
			// If sendbuffer can be freed do that
			if (i->hasBeenSent(sendbuffer->getDataStart()) {
				// Remove from linked-list by removing its reference from the predecessor
				if (sendbufferLast) {
					sendbufferLast->free_next = sendbufferNext;
				} else {
					// There is no element before this one.
					SendBuffer::free_first = sendbufferNext;
				}
				// Free the sendbuffer now
				sendbuffer->free_socket->freeSendbuffer(sendbuffer);
				// Object sendbuffer is not available anymore!
			} else {
				sendbufferLast = sendbuffer;
			}
			sendbuffer = sendbufferNext;
		}
	}
};