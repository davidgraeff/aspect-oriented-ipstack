// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2013 David GrÃ¤ff

#pragma once
#include "util/ipstack_inttypes.h"
#include "router/sendbuffer/SendBuffer.h"
#include "router/Router.h"
#include "router/Interface.h"
#include "memory_management/SocketMemory.h"

using namespace ipstack;

aspect SendBuffer_Free_DMA_Blocking {
	
	/**
	 * Instead of freeing directly, we block until hasBeenSent returns true.
	 */
	advice execution("% ipstack::SocketMemory::freeSendbuffer(void*)") && that(socketmemory) && args(b)
		: around(SocketMemory* socketmemory, void* b) {
		
		Sendbuffer* sendbuffer = (SendBuffer*)b;
		Interface* i = sendbuffer->getInterface();
		
		while (!i->hasBeenSent(sendbuffer->getDataStart()) {}
		
		tjp->proceed();
	}
};