// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2012 David GrÃ¤ff

#pragma once

#include "ICMP.h"
#include "util/types.h"
#include "../router/Interface.h"
#include "../SendBuffer.h"

using namespace ipstack;

/**
 * Set the IPv4 next header protocol to ICMPv4
 */
aspect Sendbuffer_ICMPv4_aspect  {
	advice execution("% ipstack::%_Socket::prepareSendBuffer(...)") : order("Sendbuffer_IPv%" , "Sendbuffer_ICMPv4_aspect");

	advice execution("% ipstack::ICMPv4_Socket::prepareSendBuffer(...)") && args(sendbuffer) :
		around(SendBuffer* sendbuffer) {

		// We do not write the icmp header here: this is done in the icmp aspects. Just set the ip header protocol
		sendbuffer->memstart_transport = sendbuffer->getDataPointer();
		*(sendbuffer->nextheaderfield_ip) = ICMP_Packet::IPV4_TYPE_ICMP;
		tjp->proceed();
		return;
	}
};