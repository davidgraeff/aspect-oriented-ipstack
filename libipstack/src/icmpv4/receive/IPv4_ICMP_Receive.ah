// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert, 2012 David Gr√§ff

#pragma once

#include "icmpv4/ICMPv4_Packet.h"
#include "ipv4/IPv4_Packet.h"
#include "demux/Demux.h"
#include "router/Interface.h"
#include "demux/receivebuffer/ReceiveBuffer.h"
#include "ip/management_task/Management_Task.h"
#include "util/ipstack_inttypes.h"

using namespace ipstack;

aspect IPv4_ICMP_Receive {
	advice execution("bool ipstack::Demux::ip_payload_demux(ipstack::ReceiveBuffer&,%)") && args(buffer,payload_protocol) : around(ReceiveBuffer& buffer, uint8_t payload_protocol){

		if (payload_protocol==ICMPv4_Packet::IPV4_TYPE_ICMP) {
			//we have an icmp packet
			uint16_t payloadlen = buffer.get_payload_size();
			if(payloadlen < ICMPv4_Packet::ICMP_HEADER_SIZE){
				return; //len too small!
			}
			
			ICMPv4_Packet* icmp = static_cast<ICMPv4_Packet*>(buffer.get_payload_data());
			
			//verify icmp checksum
			if (!icmp->checksum_valid(0, payloadlen, buffer.get_interface())) {
				return;
			}
			
			buffer.p.transport_packet = icmp;
			buffer.setPayload(icmp, payloadlen-ICMPv4_Packet::ICMP_HEADER_SIZE);
			
			ICMPv4_Socket* socket = Management_Task::Inst().get_socket_icmpv4();
			if (socket->acceptedData(icmp->get_type(), icmp->get_code())) {
				socket->addToReceiveQueue(buffer);
			}
			
			*(tjp->result()) = true;
			return; //icmpv4 packet dispatched now
		}
		tjp->proceed(); //try another 'ipv4_demux'-aspect
	}
};
