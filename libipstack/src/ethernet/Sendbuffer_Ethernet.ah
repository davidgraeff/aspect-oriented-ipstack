// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2011 Christoph Borchert, 2012 David GrÃ¤ff

#pragma once

#include "util/types.h"
#include "Eth_Frame.h"
#include "../router/Interface.h"
#include "Sendbuffer_Ethernet_Slice.ah"

using namespace ipstack;

/**
 * Add the ethernet header frame size to the estimateSendBufferMinSize(size)
 */
aspect Sendbuffer_Ethernet {
	/** Affect class: SendBuffer
	 * Add a pointer to the start of the ethernet header
	 */
	advice "ipstack::SendBuffer" : slice Sendbuffer_Ethernet_Slice;

	// Add the ethernet header size to the SendBuffer create call.
	advice execution("% ipstack::%_Socket::estimateSendBufferMinSize()") && result(v) :
		after(unsigned v) {
		if (tjp->that()->getUsedInterface()->getType() == Interface::ETHERNET) {
			*tjp->result() = v + Eth_Frame::ETH_HEADER_SIZE;
			//printf("Sendbuffer_Ethernet plus %i size\n", Eth_Frame::ETH_HEADER_SIZE);
		}
	}
};
