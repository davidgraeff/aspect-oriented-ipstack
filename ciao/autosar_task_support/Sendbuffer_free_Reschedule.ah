// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2011 Christoph Borchert, 2012 David GrÃ¤ff

#pragma once

#include "as/AS.h"
#include "os/krn/EnterLeave.h"

aspect Sendbuffer_free_Reschedule {

	/**
	  * We have to wait for a SendBuffer to be transmitted before we can free it. While we are in the loop,
	  * polling the network device and querying if the buffer has been send, we reschedule.
	  */
	advice call("% ipstack::Interface::hasBeenSent(...)") && within("% ipstack::%_Socket::free(...)") : after() {
		if(*tjp->result() == false) {
			os::krn::enterKernel(); //lock
			AS::Schedule();
			os::krn::leaveKernel(); //unlock
		}
	}
};
