// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2011 Christoph Borchert

#pragma once

#include "../IPv6.h"
#include "ipstack/demux/Demux.h"
#include "ipstack/router/Interface.h"
#include "ipstack/ethernet/Eth_Frame.h"
#include "util/types.h"

using namespace ipstack;

aspect IPv6_Receive_Ethernet {
	advice execution("void ipstack::Demux::ethernet_demux(...)") &&
	args(ethernet_frame, framelen, interface) && that(demux) :
		after(const void* ethernet_frame, unsigned framelen, Interface* interface, Demux& demux) {

		Eth_Frame* eth_frame = (Eth_Frame*) ethernet_frame;

		if (eth_frame->get_type() != IPv6_Packet::ETH_TYPE_IPV6)
			return;

		framelen -= Eth_Frame::ETH_HEADER_SIZE;

		IPv6_Packet* packet = (IPv6_Packet*) eth_frame->get_data();

		demux.ipv6_demux(packet, framelen, interface);
	}
};
