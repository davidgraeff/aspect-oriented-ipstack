// This file is part of Aspect-Oriented-IP.
//
// Aspect-Oriented-IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Aspect-Oriented-IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Aspect-Oriented-IP.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2013 David Gr√§ff

#pragma once
#include <inttypes.h>
#include <sys/time.h>

using namespace ipstack;

/**
 * Override empty methods and delegate to aspectless ipstack_app classes
 */
aspect OS_Integration_app {
	advice execution("% ipstack::Clock::now()") : around() {
		struct timeval tv;
		struct timezone tz;

		gettimeofday(&tv, &tz);

		*(tjp->result()) = tv.tv_sec * 1000 + tv.tv_usec / 1000;
	}
	advice execution("% ipstack::Clock::ms_to_ticks(%)") && args(ms) : around(uint32_t ms) {
		*(tjp->result()) = ms;
	}
	advice execution("% ipstack::Clock::ticks_to_ms(%)") && args(ms) : around(uint64_t ticks) {
		*(tjp->result()) = ticks;
	}
	advice execution("void ipstack::System::haltsystem()"): around() {
		exit(1);
	}
};

