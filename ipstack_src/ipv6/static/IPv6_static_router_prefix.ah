// This file is part of CiAO/IPv6-Extension.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with CiAO/IPv6-Extension.  If not, see <http://www.gnu.org/licenses/>.
// 
// Copyright (C) 2012 David GrÃ¤ff

#pragma once

#include "../cfAttribs.h"
#include "ipstack/router/Router.h"
#include "ipstack/ipv6/IPv6AddressUtilities.h"
#include "ipstack/ipv6/AddressMemory.h"
#include "ipstack/ethernet/EthernetAddressUtilities.h"
using namespace ipstack;

#define PREFIX_AS_STRING IP_MAKE_STRING(cfIPSTACK_IFCFG0_IPv6_router_prefix)
#define ROUTERIP_AS_STRING IP_MAKE_STRING(cfIPSTACK_IFCFG0_IPv6_router_ip)

/**
  * Add another ip address to the interface and link the address to a static router entry.
  * This address prefix is like an address prefix from a router advertisement message. The
  * inferface ip will be removed if the router entry goes away.
  */
aspect ipstack_ifcfg0_v6_forcerouter  {
	advice execution( "void os::init()" ) : after() {
		Interface* interface = Router::Inst().get_interface(0);
		if(interface) {
			ipstack::ipv6addr addr;
			if (!parse_ipv6_addr(PREFIX_AS_STRING, addr)) {
				return;
			}
			
			ipstack::ipv6addr routeraddr;
			if (!parse_ipv6_addr(ROUTERIP_AS_STRING, routeraddr)) {
				return;
			}
			
			// find router for this ip prefix
			NDPCacheEntry* entry = interface->ndpcache_find(routeraddr);
			if (!entry) {
				return;
			}
			UInt8 position = interface->addressmemory.getPosition(entry);

			// add an IP address with router prefix information
			interface->makeIPv6AddressByPrefix(addr, cfIPSTACK_IFCFG0_IPv6_router_prefixlen, AddressEntry::AddressEntryStateTemporary, position);
		}
	}
};