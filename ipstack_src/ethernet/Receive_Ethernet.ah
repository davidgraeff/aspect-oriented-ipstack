// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2011 Christoph Borchert


#ifndef __RECEIVE_ETHERNET_AH__
#define __RECEIVE_ETHERNET_AH__

#include "Eth_Frame.h"
#include "Demux_Ethernet_Slice.ah"
#include "../demux/Demux.h"
#include "../router/Interface.h"

using namespace ipstack;

aspect Ethernet_Receive {
	/* Affect class: Demux */
advice "ipstack::Demux" : slice Demux_Ethernet_Slice;

	advice execution("void ipstack::Demux::demux(const void*, unsigned, ipstack::Interface*)") &&
	args(data, len, interface) && that(demux) :
		around(const void* data, unsigned len, Interface* interface, Demux& demux) {

		if (interface->getType() == Interface::ETHERNET) {

			//check for correct ethernet frame length
			if ((len < Eth_Frame::ETH_HEADER_SIZE) || (len > Eth_Frame::MAX_FRAME_SIZE)) {
				return; //length too small or too big
			}

			demux.ethernet_demux(data, len, interface);
		} else {
			// only go on with demuxing if it is not an ethernet packet
			tjp->proceed();
		}
	}
};

#endif // __RECEIVE_ETHERNET_AH__

