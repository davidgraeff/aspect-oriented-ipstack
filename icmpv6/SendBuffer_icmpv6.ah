// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2012 David GrÃ¤ff

#pragma once

#include "ipstack/router/Interface.h"
#include "ipstack/SendBuffer.h"
#include "ICMPv6.h"
#include "ipstack/ipv6/IPv6.h"
#include "ipstack/ipv6/InternetChecksum.h"
#include "util/types.h"

using namespace ipstack;

/**
 * Set the IPv6 next header protocol to ICMPv6
 */
aspect Sendbuffer_IPCMPv6  {
	advice execution("void ipstack::%_Socket::prepareSendBuffer(...)") : order("Sendbuffer_IPv%" , "Sendbuffer_IPCMPv6");

	advice execution("% ipstack::ICMPv6_Socket::prepareSendBuffer(...)") && args(sendbuffer) :
		after(SendBuffer* sendbuffer) {
		// We do not write the icmp header here: this is done in the icmp aspects. Just set the ip header protocol
		sendbuffer->memstart_transport = sendbuffer->data;
		*(sendbuffer->nextheaderfield_ip) = ICMPv6_Packet::IPV6_TYPE_ICMP;
	}
};
