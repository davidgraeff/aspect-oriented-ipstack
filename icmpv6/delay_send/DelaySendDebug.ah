// This file is part of CiAO/IP.
//
// CiAO/IP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CiAO/IP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CiAO/IP.  If not, see <http://www.gnu.org/licenses/>.
//
// Copyright (C) 2013 David GrÃ¤ff

#pragma once

#include "DelaySendMethod.h"
#include "ipstack/SendBuffer.h"
#include "ipstack/ip_management_memory/SharedMemory.h"

using namespace ipstack;

aspect delay_icmpv6_send_debug {
	// advice ordering: always execute this aspect first
	advice execution("% ipstack::ICMPv6_Socket::send(ipstack::SendBuffer*)") : 
	order( "delay_icmpv6_send_debug","delay_icmpv6_send" );
	
	/**
	  * We intercept send requests and if DelaySend::mHoldBack is active we just do nothing. The affected sendbuffers will
	  * be send at the end of the "ipv6_payload_demux"-advice of this aspect.
	  */
	advice execution("% ipstack::ICMPv6_Socket::send(ipstack::SendBuffer*)") && args(dataToSend) : around(SendBuffer* dataToSend){
		if (DelaySend::mHoldBack) {
 			printf("delay_icmpv6_send::avoid %p, interface %p\n", dataToSend, dataToSend->getInterface());
		}
		tjp->proceed();
	}
	
	// advice ordering: always execute this aspect first
	advice execution("% ipstack::Demux::icmpv6_demux(...)") : 
	order( "delay_icmpv6_send_debug","delay_icmpv6_send" );
	
	advice execution("% ipstack::DelaySend::sendDelayed(ipstack::SendBuffer*)") && args(buffer) : before(SendBuffer* buffer) {
		if (buffer->getState()==SendBuffer::AboutToBeTransmittedState) {
			printf("delay_icmpv6_send: send %p...\n", buffer);
		} else {
			printf("delay_icmpv6_send: already send %p\n", buffer);
		}
	}

	advice execution("% ipstack::Demux::icmpv6_demux(...)")  : after() {
		if (DelaySend::mHoldBack==0) {
			printf("delay_icmpv6_send::send now\n");
		}
	}
};
